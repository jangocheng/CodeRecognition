<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="880307027">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/pic/2017.08.25/C1-08251718/C1_110 (2).bmp')</l>
<l>emphasize (Image, ImageEmphasize, 7, 7, 5)</l>
<l>median_image (ImageEmphasize, ImageMedian, 'circle', 1, 'mirrored')</l>
<l>invert_image (ImageMedian, ImageInvert)</l>
<l>*mean_image (ImageInvert, ImageMean, 5, 5)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 80, 'light')</l>
<l>threshold (ImageInvert, Region, 150, 255)</l>
<l>closing_circle (Region, RegionClosing, 10)</l>
<l>connection (RegionClosing, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, ['width','height'], 'and', [40,30], [180,140])</l>
<l>select_shape_std (SelectedRegions, SelectedRegions, 'max_area', 70)</l>
<l>intersection (SelectedRegions, Region, RegionIntersection)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection, Row, Column, Phi, Length1, Length2)</l>
<l>tuple_deg (Phi, Deg)</l>
<l>rotate_image (Image, ImageRotate, -Deg-1.5, 'constant')</l>
<c>*处理旋转后的图像</c>
<l>emphasize (ImageRotate, ImageEmphasize, 7, 7, 5)</l>
<l>median_image (ImageEmphasize, ImageMedian, 'circle', 1, 'mirrored')</l>
<l>invert_image (ImageMedian, ImageInvert)</l>
<l>*mean_image (ImageRotate, ImageMean, 3, 3)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 30, 'light')</l>
<l>threshold (ImageInvert, Region, 140, 255)</l>
<l>closing_circle (Region, RegionClosing, 10)</l>
<l>opening_circle (RegionClosing, RegionOpening, 5)</l>
<l>connection (RegionOpening, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, ['width','height'], 'and', [40,30], [160,110])</l>
<l>intersection (SelectedRegions, Region, RegionIntersection)</l>
<l>smallest_rectangle2 (RegionIntersection, Row, Column, Phi, Length1, Length2)</l>
<l>RegionPriorWidth:=74</l>
<l>RegionPriorHeight:=30</l>
<l>gen_rectangle2 (Rectangle, Row-1, Column+Length1/2-RegionPriorWidth/2, 0, RegionPriorWidth, RegionPriorHeight)</l>
<c>*缩小区域</c>
<l>reduce_domain (ImageInvert, Rectangle, ImageReduced)</l>
<l>median_image (ImageReduced, ImageMedian, 'circle', 2, 'mirrored')</l>
<l>threshold (ImageMedian, Region, 100, 255)</l>
<l>closing_circle (Region, RegionClosing, 20)</l>
<l>opening_circle (RegionClosing, RegionOpening, 5)</l>
<l>connection (RegionOpening, ConnectedRegions)</l>
<l>select_shape (ConnectedRegions, SelectedRegions, ['width','height'], 'and', [40,30], [160,110])</l>
<l>intersection (SelectedRegions, Region, RegionIntersection)</l>
<l>smallest_rectangle2 (RegionIntersection, Row, Column, Phi, Length1, Length2)</l>
<c>*第一行****************************</c>
<l>gen_rectangle2 (Rectangle1, Row-Length2/2-1, Column, 0, Length1+4, Length2/2)</l>
<l>reduce_domain (ImageReduced, Rectangle1, ImageReduced1)</l>
<l>*mean_image (ImageReduced1, ImageMean1, 5, 5)</l>
<l>*dyn_threshold (ImageReduced1, ImageMean1, Region1, 50, 'light')</l>
<l>threshold (ImageReduced1, Region1, 90, 255)</l>
<l>closing_rectangle1 (Region1, RegionClosing1, 2, 50)</l>
<l>connection (RegionClosing1, ConnectedRegions1)</l>
<l>shape_trans (ConnectedRegions1, RegionTrans1, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans1, Partitioned1, 12, 32)</l>
<l>select_shape (Partitioned1, SelectedRegions1, ['area','height'], 'and', [100,20], [550,40])</l>
<l>intersection (SelectedRegions1, Region1, RegionIntersection1)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection1, SortedRegions1, 'first_point', 'true', 'row')</l>
<l>area_center (SortedRegions1, Area1, Row1, Column1)</l>
<l>FontName:='Industrial_0-9.omc'</l>
<l>read_ocr_class_mlp(FontName, OCRHandle1)</l>
<l>do_ocr_multi_class_mlp (SortedRegions1, ImageRotate, OCRHandle1, RecNum1, Confidence1)</l>
<c>*第二行***********************</c>
<l>gen_rectangle2 (Rectangle2, Row+Length2/2, Column, 0, Length1+4, Length2/2)</l>
<l>reduce_domain (ImageInvert, Rectangle2, ImageReduced2)</l>
<l>*mean_image (ImageReduced2, ImageMean2, 5, 5)</l>
<l>*dyn_threshold (ImageReduced2, ImageMean2, Region2, 50, 'light')</l>
<l>threshold (ImageReduced2, Region2, 90, 255)</l>
<l>closing_rectangle1 (Region2, RegionClosing2, 2, 50)</l>
<l>connection (RegionClosing2, ConnectedRegions2)</l>
<l>shape_trans (ConnectedRegions2, RegionTrans2, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans2, Partitioned2, 12, 32)</l>
<l>select_shape (Partitioned2, SelectedRegions2, ['area','height'], 'and', [100,20], [550,40])</l>
<l>intersection (SelectedRegions2, Region2, RegionIntersection2)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection2, SortedRegions2, 'first_point', 'true', 'row')</l>
<l>area_center (SortedRegions2, Area2, Row2, Column2)</l>
<c>*识别</c>
<l>read_ocr_class_mlp(FontName, OCRHandle2)</l>
<l>do_ocr_multi_class_mlp (SortedRegions2, ImageRotate, OCRHandle2, RecNum2, Confidence2)</l>
<c>*显示识别结果</c>
<l>set_display_font (3600, 27, 'mono', 'true', 'false')</l>
<l>for i := 0 to |RecNum1| - 1 by 1</l>
<l>    disp_message (3600, RecNum1[i], 'image', Row1[i],Column1[i], 'white', 'false')</l>
<l>endfor</l>
<l>for i := 0 to |RecNum2| - 1 by 1</l>
<l>    disp_message (3600, RecNum2[i], 'image', Row2[i],Column2[i], 'white', 'false')</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
