<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="518688259">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/pic/2017.08.25/C1-08251718/C1_100 (2).bmp')</l>
<l>emphasize (Image, ImageEmphasize0, 7, 7, 5)</l>
<l>binomial_filter (ImageEmphasize0, ImageBinomial0, 9, 9)</l>
<l>invert_image (ImageBinomial0, ImageInvert0)</l>
<l>*mean_image (ImageInvert, ImageMean, 5, 5)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 80, 'light')</l>
<l>threshold (ImageInvert0, Region0, 135, 255)</l>
<l>closing_circle (Region0, RegionClosing0, 10)</l>
<l>connection (RegionClosing0, ConnectedRegions0)</l>
<l>select_shape (ConnectedRegions0, SelectedRegions0, ['width','height'], 'and', [40,30], [180,140])</l>
<l>select_shape_std (SelectedRegions0, SelectedRegionsStd0, 'max_area', 70)</l>
<l>intersection (SelectedRegionsStd0, Region0, RegionIntersection0)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection0, Row0, Column0, Phi0, Length01, Length02)</l>
<l>tuple_deg (Phi0, Deg0)</l>
<l>rotate_image (Image, ImageRotate0, -Deg0, 'constant')</l>
<c>*处理旋转后的图像</c>
<l>emphasize (ImageRotate0, ImageEmphasize01, 7, 7, 5)</l>
<l>binomial_filter (ImageEmphasize01, ImageBinomia0l, 9, 9)</l>
<l>invert_image (ImageBinomia0l, ImageInvert01)</l>
<l>*mean_image (ImageRotate, ImageMean, 3, 3)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 30, 'light')</l>
<l>threshold (ImageInvert01, Region01, 135, 255)</l>
<l>closing_circle (Region01, RegionClosing01, 10)</l>
<l>opening_circle (RegionClosing01, RegionOpening01, 5)</l>
<l>connection (RegionOpening01, ConnectedRegions01)</l>
<l>select_shape (ConnectedRegions01, SelectedRegions01, ['width','height'], 'and', [40,30], [160,110])</l>
<l>intersection (SelectedRegions01, Region01, RegionIntersection01)</l>
<l>smallest_rectangle2 (RegionIntersection01, Row01, Column01, Phi01, Length011, Length012)</l>
<l>RegionPriorWidth:=74</l>
<l>RegionPriorHeight:=30</l>
<c>*62,26</c>
<l>gen_rectangle2 (Rectangle01, Row01-1, Column01+Length011/2-RegionPriorWidth/2, 0, RegionPriorWidth, RegionPriorHeight)</l>
<c>*缩小区域</c>
<l>reduce_domain (ImageInvert01, Rectangle01, ImageReduced01)</l>
<l>threshold (ImageReduced01, Region02, 110, 255)</l>
<l>closing_rectangle1 (Region02, RegionClosing02, 30, 1)</l>
<l>opening_rectangle1 (RegionClosing02, RegionOpening02, 5, 1)</l>
<l>connection (RegionOpening02, ConnectedRegions02)</l>
<c>*第一行***********************</c>
<l>select_shape (ConnectedRegions02, SelectedRegions1, ['width','height','row'], 'and', [40,18,158], [160,35,190])</l>
<l>intersection (SelectedRegions1, Region02, RegionIntersection1)</l>
<l>closing_rectangle1 (RegionIntersection1, RegionClosing1, 2, 50)</l>
<l>connection (RegionClosing1, ConnectedRegions1)</l>
<l>shape_trans (ConnectedRegions1, RegionTrans1, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans1, Partitioned1, 14, 32)</l>
<l>select_shape (Partitioned1, SelectedRegions1, ['area','width','height'], 'and', [110,6,18], [600,20,40])</l>
<l>intersection (SelectedRegions1, Region02, RegionIntersection11)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection11, SortedRegions1, 'first_point', 'true', 'column')</l>
<l>area_center (SortedRegions1, Area1, Row1, Column1)</l>
<l>FontName:='D:/github/CodeRecognition/0825Words.omc'</l>
<l>read_ocr_class_mlp(FontName, OCRHandle1)</l>
<l>do_ocr_multi_class_mlp (SortedRegions1, ImageRotate0, OCRHandle1, RecNum1, Confidence1)</l>
<c>*第二行***********************</c>
<l>select_shape (ConnectedRegions02, SelectedRegions2, ['width','height','row'], 'and', [40,18,185], [160,35,215])</l>
<l>intersection (SelectedRegions2, Region02, RegionIntersection2)</l>
<l>closing_rectangle1 (RegionIntersection2, RegionClosing2, 2, 50)</l>
<l>connection (RegionClosing2, ConnectedRegions2)</l>
<l>shape_trans (ConnectedRegions2, RegionTrans2, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans2, Partitioned2, 14, 32)</l>
<l>select_shape (Partitioned2, SelectedRegions2, ['area','width','height'], 'and', [110,6,18], [600,20,40])</l>
<l>intersection (SelectedRegions2, Region02, RegionIntersection21)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection21, SortedRegions2, 'first_point', 'true', 'column')</l>
<l>area_center (SortedRegions2, Area2, Row2, Column2)</l>
<c>*识别</c>
<l>read_ocr_class_mlp(FontName, OCRHandle2)</l>
<l>do_ocr_multi_class_mlp (SortedRegions2, ImageRotate0, OCRHandle2, RecNum2, Confidence2)</l>
<c>*显示识别结果</c>
<l>set_display_font (3600, 27, 'mono', 'true', 'false')</l>
<l>for i := 0 to |RecNum1| - 1 by 1</l>
<l>    disp_message (3600, RecNum1[i], 'image', Row1[i],Column1[i], 'white', 'false')</l>
<l>endfor</l>
<l>for i := 0 to |RecNum2| - 1 by 1</l>
<l>    disp_message (3600, RecNum2[i], 'image', Row2[i],Column2[i], 'white', 'false')</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
