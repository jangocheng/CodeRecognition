<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="-497489570">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/C1  20180827/C1_0.bmp')</l>
<l>emphasize (Image, ImageEmphasize, 7, 7, 3)</l>
<l>binomial_filter (ImageEmphasize, ImageBinomial0, 5, 5)</l>
<l>threshold (ImageBinomial0, Region0, 0, 100)</l>
<l>closing_rectangle1 (Region0, RegionClosing00, 30, 20)</l>
<l>connection (RegionClosing00, ConnectedRegions0)</l>
<l>select_shape (ConnectedRegions0, SelectedRegions0, ['width','height'], 'and', [160,55], [250,180])</l>
<l>count_obj (SelectedRegions0, Number0)</l>
<l>if (Number0 # 1)  </l>
<l>    return ()</l>
<l>endif</l>
<l>intersection (SelectedRegions0, Region0, RegionIntersection0)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection0, Row0, Column0, Phi0, Length01, Length02)</l>
<l>smallest_rectangle1 (RegionIntersection0, Row11, Column11, Row12, Column12)</l>
<l>tuple_deg (Phi0, Deg0)</l>
<l>crop_rectangle1 (Image, ImagePart0, Row11, Column11, Row12, Column12)</l>
<l>crop_rectangle1 (ImageBinomial0, ImagePart1, Row11, Column11, Row12, Column12)</l>
<l>rotate_image (ImagePart0, ImageRotate0, -Deg0, 'constant')</l>
<l>rotate_image (ImagePart1, ImageRotate1, -Deg0, 'constant')</l>
<c>*处理旋转后的图像</c>
<l>threshold (ImageRotate1, Region01, 0, 105)</l>
<l>closing_rectangle1 (Region01, RegionClosing011, 30, 20)</l>
<l>connection (RegionClosing011, ConnectedRegions01)</l>
<l>select_shape (ConnectedRegions01, SelectedRegions01, ['width','height'], 'and', [160,55], [200,85])</l>
<l>count_obj (SelectedRegions01, Number01)</l>
<l>if (Number01 # 1)  </l>
<l>    return ()</l>
<l>endif</l>
<l>intersection (SelectedRegions01, Region01, RegionIntersection01)</l>
<l>area_center (RegionIntersection01, Area, Row, Column)</l>
<l>gen_rectangle2 (Rectangle1, 10, 10, rad(45), 3, 0)</l>
<l>closing (RegionIntersection01, Rectangle1, RegionClosing1)</l>
<l>gen_rectangle2 (Rectangle11, 10, 10, rad(135), 3, 0)</l>
<l>closing (RegionClosing1, Rectangle11, RegionClosing11)</l>
<l>closing_rectangle1 (RegionClosing11, RegionClosing12, 5, 10)</l>
<l>connection (RegionClosing12, ConnectedRegions1)</l>
<l>shape_trans (ConnectedRegions1, RegionTrans1, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans1, Partitioned1, 20, 28)</l>
<l>select_shape (Partitioned1, SelectedRegions1, ['width','height', 'row'], 'and', [8,20, Row-30], [25,36, Row])</l>
<l>intersection (SelectedRegions1, Region01, RegionIntersection11)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection11, SortedRegions1, 'first_point', 'true', 'column')</l>
<l>count_obj (SortedRegions1, Number1)</l>
<l>area_center (SortedRegions1, Area11, Row11, Column11)</l>
<l>if (Number1 # 8)</l>
<l>    return ()</l>
<l>endif</l>
<l>KnownStr := [2,0,1,8,0,8,2,7,1,0,0,4,1,3,10]</l>
<l>AreaMax := [170,82,160,153,116,155,138,135,170,173,186]</l>
<l>AreaMin := [111,54,82,100,100,103,122,65,109,115,125]</l>
<l>AreaDelta := 50</l>
<l>for Index1 := 0 to Number1-1 by 1</l>
<l>    if ((Area11[Index1] &lt; AreaMax[KnownStr[Index1]] - AreaDelta))</l>
<l>        ErrorCount := 1</l>
<l>        return ()</l>
<l>    endif</l>
<l>endfor</l>
<c></c>
<c>*第二行***********************</c>
<l>select_shape (Partitioned1, SelectedRegions2, ['width','height', 'row'], 'and', [8,20, Row], [25,36, Row+30])</l>
<l>intersection (SelectedRegions2, Region01, RegionIntersection21)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection21, SortedRegions2, 'first_point', 'true', 'column')</l>
<l>count_obj (SortedRegions2, Number2)</l>
<l>area_center (SortedRegions2, Area12, Row12, Column12)</l>
<l>if (Number2 # 7)</l>
<l>    return ()</l>
<l>endif</l>
<l>for Index2 := 0 to Number2-1 by 1 </l>
<l>    if ((Area12[Index2] &lt; AreaMax[KnownStr[Index2+8]]-AreaDelta))</l>
<l>        ErrorCount := 2</l>
<l>        return()</l>
<l>    endif</l>
<l>endfor</l>
<c></c>
<l>dev_clear_window ()</l>
<l>dev_set_color ('white')</l>
<l>dev_display (SortedRegions1)</l>
<l>dev_display (SortedRegions2)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
