<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="909500494">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/青啤/C1_47.bmp')</l>
<l>emphasize (Image, ImageEmphasize0, 7, 7, 5)</l>
<l>binomial_filter (ImageEmphasize0, ImageBinomia0, 9, 9)</l>
<l>*median_image (ImageEmphasize0, ImageMedian0, 'circle', 1, 'mirrored')</l>
<l>invert_image (ImageBinomia0, ImageInvert0)</l>
<l>*mean_image (ImageInvert, ImageMean, 5, 5)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 80, 'light')</l>
<l>threshold (ImageInvert0, Region0, 120, 255)</l>
<l>closing_rectangle1 (Region0, RegionClosing0, 30, 10)</l>
<l>opening_rectangle1 (RegionClosing0, RegionOpening0, 20, 10)</l>
<l>closing_circle (RegionOpening0, RegionClosing01, 10)</l>
<l>*closing_circle (Region0, RegionClosing0, 10)</l>
<l>connection (RegionClosing01, ConnectedRegions0)</l>
<l>select_shape (ConnectedRegions0, SelectedRegions0, ['width','height'], 'and', [80,30], [170,110])</l>
<l>select_shape_std (SelectedRegions0, SelectedRegionsStd0, 'max_area', 70)</l>
<l>intersection (SelectedRegionsStd0, Region0, RegionIntersection0)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection0, Row0, Column0, Phi0, Length01, Length02)</l>
<l>tuple_deg (Phi0, Deg0)</l>
<l>rotate_image (Image, ImageRotate0, -Deg0, 'constant')</l>
<c>*处理旋转后的图像</c>
<l>emphasize (ImageRotate0, ImageEmphasize01, 7, 7, 5)</l>
<l>binomial_filter (ImageEmphasize01, ImageBinomial01, 9, 9)</l>
<l>*median_image (ImageEmphasize01, ImageMedian01, 'circle', 1, 'mirrored')</l>
<l>invert_image (ImageBinomial01, ImageInvert01)</l>
<l>*mean_image (ImageRotate, ImageMean, 3, 3)</l>
<l>*dyn_threshold (ImageInvert, ImageMean, Region, 30, 'light')</l>
<l>threshold (ImageInvert01, Region01, 110, 255)</l>
<l>closing_rectangle1 (Region01, RegionClosing01, 30, 10)</l>
<l>opening_rectangle1 (RegionClosing01, RegionOpening01, 20, 10)</l>
<l>closing_circle (RegionOpening01, RegionClosing02, 5)</l>
<l>*closing_circle (Region01, RegionClosing01, 10)</l>
<l>*opening_circle (RegionClosing01, RegionOpening01, 5)</l>
<l>connection (RegionClosing02, ConnectedRegions01)</l>
<l>select_shape (ConnectedRegions01, SelectedRegions01, ['width','height'], 'and', [80,30], [170,110])</l>
<l>select_shape_std (SelectedRegions01, SelectedRegionsStd01, 'max_area', 70)</l>
<l>intersection (SelectedRegionsStd01, Region01, RegionIntersection01)</l>
<l>smallest_rectangle2 (RegionIntersection01, Row01, Column01, Phi01, Length011, Length012)</l>
<l>RegionPriorWidth:=74</l>
<l>RegionPriorHeight:=36</l>
<l>gen_rectangle2 (Rectangle01, Row01-1, Column01+Length011/2-RegionPriorWidth/2, 0, RegionPriorWidth, RegionPriorHeight)</l>
<c>*缩小区域</c>
<l>reduce_domain (ImageInvert01, Rectangle01, ImageReduced01)</l>
<l>median_image (ImageReduced01, ImageMedian02, 'circle', 2, 'mirrored')</l>
<l>threshold (ImageMedian02, Region02, 100, 255)</l>
<l>closing_circle (Region02, RegionClosing02, 20)</l>
<l>opening_circle (RegionClosing02, RegionOpening02, 5)</l>
<l>connection (RegionOpening02, ConnectedRegions02)</l>
<l>select_shape (ConnectedRegions02, SelectedRegions02, ['width','height'], 'and', [40,30], [160,110])</l>
<l>intersection (SelectedRegions02, Region02, RegionIntersection02)</l>
<l>smallest_rectangle2 (RegionIntersection02, Row02, Column02, Phi02, Length021, Length022)</l>
<c>*第一行****************************</c>
<l>gen_rectangle2 (Rectangle1, Row02-Length022/2-1, Column02, 0, Length021+4, Length022/2)</l>
<l>reduce_domain (ImageReduced01, Rectangle1, ImageReduced1)</l>
<l>*mean_image (ImageReduced1, ImageMean1, 5, 5)</l>
<l>*dyn_threshold (ImageReduced1, ImageMean1, Region1, 50, 'light')</l>
<l>threshold (ImageReduced1, Region1, 100, 255)</l>
<l>closing_rectangle1 (Region1, RegionClosing1, 2, 50)</l>
<l>connection (RegionClosing1, ConnectedRegions1)</l>
<l>shape_trans (ConnectedRegions1, RegionTrans1, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans1, Partitioned1, 15, 32)</l>
<l>select_shape (Partitioned1, SelectedRegions1, ['area','width','height'], 'and', [100,5,20], [700,25,40])</l>
<l>intersection (SelectedRegions1, Region1, RegionIntersection1)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection1, SortedRegions1, 'first_point', 'true', 'row')</l>
<l>area_center (SortedRegions1, Area1, Row1, Column1)</l>
<l>FontName:='Industrial_0-9.omc'</l>
<l>read_ocr_class_mlp(FontName, OCRHandle1)</l>
<l>do_ocr_multi_class_mlp (SortedRegions1, ImageRotate0, OCRHandle1, RecNum1, Confidence1)</l>
<c>*第二行***********************</c>
<l>gen_rectangle2 (Rectangle2, Row02+Length022/2+3, Column02, 0, Length021+4, Length022/2)</l>
<l>reduce_domain (ImageReduced01, Rectangle2, ImageReduced2)</l>
<l>*mean_image (ImageReduced2, ImageMean2, 5, 5)</l>
<l>*dyn_threshold (ImageReduced2, ImageMean2, Region2, 50, 'light')</l>
<l>threshold (ImageReduced2, Region2, 100, 255)</l>
<l>closing_rectangle1 (Region2, RegionClosing2, 2, 50)</l>
<l>connection (RegionClosing2, ConnectedRegions2)</l>
<l>shape_trans (ConnectedRegions2, RegionTrans2, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans2, Partitioned2, 12, 32)</l>
<l>select_shape (Partitioned2, SelectedRegions2, ['area','width','height'], 'and', [100,5,20], [550,25,40])</l>
<l>intersection (SelectedRegions2, Region2, RegionIntersection2)</l>
<c>*选中字符</c>
<c>*排序</c>
<l>sort_region (RegionIntersection2, SortedRegions2, 'first_point', 'true', 'row')</l>
<l>area_center (SortedRegions2, Area2, Row2, Column2)</l>
<c>*识别</c>
<l>read_ocr_class_mlp(FontName, OCRHandle2)</l>
<l>do_ocr_multi_class_mlp (SortedRegions2, ImageRotate0, OCRHandle2, RecNum2, Confidence2)</l>
<c>*显示识别结果</c>
<l>set_display_font (3600, 27, 'mono', 'true', 'false')</l>
<l>for i := 0 to |RecNum1| - 1 by 1</l>
<l>    disp_message (3600, RecNum1[i], 'image', Row1[i],Column1[i], 'white', 'false')</l>
<l>endfor</l>
<l>for i := 0 to |RecNum2| - 1 by 1</l>
<l>    disp_message (3600, RecNum2[i], 'image', Row2[i],Column2[i], 'white', 'false')</l>
<l>endfor</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
