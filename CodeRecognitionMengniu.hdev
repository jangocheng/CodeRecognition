<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="532346048">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/蒙牛/VLG-02M(0776620216)3.bmp')</l>
<l>dots_image (Image, DotImage0, 3, 'dark', 2)</l>
<l>threshold (DotImage0, Region0, 150, 255)</l>
<l>closing_circle (Region0, RegionClosing0, 14)</l>
<l>connection (RegionClosing0, ConnectedRegions0)</l>
<l>select_shape (ConnectedRegions0, SelectedRegions0, ['width','height'], 'and', [350,30], [430,40])</l>
<l>select_shape_std (SelectedRegions0, SelectedRegionsStd0, 'max_area', 70)</l>
<l>count_obj (SelectedRegionsStd0, Number0)</l>
<l>if (Number0 # 1)  </l>
<l>    return ()</l>
<l>endif</l>
<l>intersection (SelectedRegionsStd0, Region0, RegionIntersection0)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection0, Row0, Column0, Phi0, Length01, Length02)</l>
<l>tuple_deg (Phi0, Deg0)</l>
<l>rotate_image (Image, ImageRotate0, -Deg0, 'constant')</l>
<c>*处理旋转后的图像</c>
<l>dots_image (ImageRotate0, DotImage01, 3, 'dark', 2)</l>
<l>threshold (DotImage01, Region01, 135, 255)</l>
<l>closing_circle (Region01, RegionClosing01, 14)</l>
<l>opening_circle (RegionClosing01, RegionOpening01, 3.5)</l>
<l>connection (RegionOpening01, ConnectedRegions01)</l>
<l>select_shape (ConnectedRegions01, SelectedRegions01, ['width','height'], 'and', [350,30], [430,40])</l>
<l>select_shape_std (SelectedRegions01, SelectedRegionsStd01, 'max_area', 70)</l>
<l>count_obj (SelectedRegions01, Number01)</l>
<l>if (Number01 # 1)  </l>
<l>    return ()</l>
<l>endif</l>
<l>intersection (SelectedRegions01, Region01, RegionIntersection01)</l>
<l>sort_region (RegionIntersection11, SortedRegions1, 'first_point', 'true', 'column')</l>
<l>count_obj (SortedRegions1, Number1)</l>
<l>if (Number1 # 8)</l>
<l>    return ()</l>
<l>endif</l>
<l>area_center (SortedRegions1, Area11, Row11, Column11)</l>
<l>KnownStr := [2,0,1,7,0,8,2,5,3,6,2,1,7,1,9]</l>
<l>AreaPrior := [115,60,95,100,100,103,122,78,124,120]</l>
<l>AreaDelta := 0.3</l>
<l>ErrorCount := 0</l>
<l>for Index1 := 0 to Number1-1 by 1 </l>
<l>    if (Area11[Index1] &lt; AreaPrior[KnownStr[Index1]] * (1-AreaDelta))</l>
<l>        ErrorCount := ErrorCount + 1</l>
<l>        return ()</l>
<l>    endif</l>
<l>endfor</l>
<c></c>
<l>dev_clear_window ()</l>
<l>dev_set_color ('white')</l>
<l>dev_display (SortedRegions1)</l>
<l>dev_display (SortedRegions2)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
