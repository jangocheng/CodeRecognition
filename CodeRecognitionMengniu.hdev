<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.0" halcon_version="10.0" cs="-420162929">
<procedure name="main">
<interface/>
<body>
<l>read_image (Image, 'D:/实习/图片/蒙牛/VLG-02M(0776620216)9.bmp')</l>
<l>get_image_size (Image, Width0, Height0)</l>
<l>dots_image (Image, DotImage0, 3, 'dark', 2)</l>
<l>threshold (DotImage0, Region0, 150, 255)</l>
<l>closing_rectangle1 (Region0, RegionClosing0, 10, 10)</l>
<l>closing_circle (RegionClosing0, RegionClosing001, 7.5)</l>
<l>closing_rectangle1 (RegionClosing001, RegionClosing002, 20, 1)</l>
<l>fill_up (RegionClosing002, RegionFillUp0)</l>
<l>connection (RegionFillUp0, ConnectedRegions0)</l>
<l>select_shape (ConnectedRegions0, SelectedRegions0, ['height','width','area'], 'and', [25,360,10000], [60,440,24000])</l>
<l>select_shape_std (SelectedRegions0, SelectedRegionsStd0, 'max_area', 70)</l>
<l>count_obj (SelectedRegionsStd0, Number0)</l>
<l>errorCounts := 0</l>
<l>if (Number0 # 1)  </l>
<l>    errorCounts := 10</l>
<l>    dev_clear_window ()</l>
<l>    dev_set_color ('white')</l>
<l>    dev_display (Image)</l>
<l>    return ()</l>
<l>endif</l>
<l>intersection (SelectedRegionsStd0, Region0, RegionIntersection0)</l>
<c>*旋转图像</c>
<l>smallest_rectangle2 (RegionIntersection0, Row0, Column0, Phi0, Length01, Length02)</l>
<l>gen_rectangle2 (Rectangle0, Row0, Column0-1, Phi0, Length01+4, Length02+4)</l>
<c></c>
<l>reduce_domain (Image, Rectangle0, ImageReduced0)</l>
<l>crop_domain (ImageReduced0, ImagePart0)</l>
<c></c>
<l>reduce_domain (DotImage0, Rectangle0, ImageReduced1)</l>
<l>crop_domain (ImageReduced1, ImagePart1)</l>
<c></c>
<l>get_image_pointer1 (ImagePart1, Pointer, Type, Width, Height)</l>
<l>hom_mat2d_identity (HomMat2DIdentity)</l>
<l>hom_mat2d_rotate (HomMat2DIdentity, -Phi0, Width/2, Height/2, HomMat2DRotate)</l>
<l>affine_trans_image (ImagePart0, ImageRotate0, HomMat2DRotate, 'nearest_neighbor', 'true')</l>
<l>affine_trans_image (ImagePart1, ImageRotate1, HomMat2DRotate, 'nearest_neighbor', 'true')</l>
<c>*处理旋转后的图像</c>
<l>dots_image (ImageRotate1, DotImage2, 3, 'light', 2)</l>
<l>mean_image (DotImage2, ImageMean2, 7, 7)</l>
<l>dyn_threshold (DotImage2, ImageMean2, RegionDynThresh2, 60, 'light')</l>
<c>*形态学处理</c>
<l>gen_rectangle2 (Rectangle2, 10, 10, rad(45), 3, 0)</l>
<l>closing (RegionDynThresh2, Rectangle2, RegionClosing2)</l>
<l>gen_rectangle2 (Rectangle21, 10, 10, rad(135), 3, 0)</l>
<l>closing (RegionClosing2, Rectangle21, RegionClosing21)</l>
<l>closing_rectangle1 (RegionClosing21, RegionClosing22, 5, 30)</l>
<c></c>
<l>connection (RegionClosing22, ConnectedRegions1)</l>
<l>shape_trans (ConnectedRegions1, RegionTrans1, 'rectangle1')</l>
<l>partition_rectangle (RegionTrans1, Partitioned1, 26, 33)</l>
<l>select_shape (Partitioned1, SelectedRegions1, ['width','height'], 'and', [6,30], [28,50])</l>
<l>intersection (SelectedRegions1, RegionDynThresh2, RegionIntersection1)</l>
<l>sort_region (RegionIntersection1, SortedRegions1, 'first_point', 'true', 'column')</l>
<l>count_obj (SortedRegions1, Number1)</l>
<l>if (Number1 # 16)</l>
<l>    errorCounts := 1</l>
<l>    dev_clear_window ()</l>
<l>    dev_set_color ('white')</l>
<l>    dev_display (Image)</l>
<l>    return ()</l>
<l>endif</l>
<c></c>
<l>FontName:='D:/github/CodeRecognition/MengniuWords.omc'</l>
<l>read_ocr_class_mlp(FontName, OCRHandle1)</l>
<l>do_ocr_multi_class_mlp (SortedRegions1, ImageRotate0, OCRHandle1, RecNum1, Confidence1)</l>
<c></c>
<l>dev_clear_window ()</l>
<l>dev_set_color ('white')</l>
<l>dev_display (SortedRegions1)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
